name: Vercel Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Build project
        run: npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod --yes'

      - name: Comment PR with deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('Vercel deployment')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: `🚀 **Vercel deployment successful!**\n\n✅ Build completed successfully\n✅ Deployed to production\n\n**Preview URL:** https://zero-digital.vercel.app/\n\n**Commit:** ${context.sha.substring(0, 7)}\n**Branch:** ${context.ref.replace('refs/heads/', '')}`
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `🚀 **Vercel deployment successful!**\n\n✅ Build completed successfully\n✅ Deployed to production\n\n**Preview URL:** https://zero-digital.vercel.app/\n\n**Commit:** ${context.sha.substring(0, 7)}\n**Branch:** ${context.ref.replace('refs/heads/', '')}`
              });
            }

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify deployment status
        if: github.ref == 'refs/heads/main'
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "✅ Production deployment successful!"
            echo "🌐 Live URL: https://zero-digital.vercel.app/"
          else
            echo "❌ Production deployment failed!"
            exit 1
          fi
